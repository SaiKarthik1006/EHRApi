//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExampleAPIForTesting.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CqmEhrReporting_productionEntities : DbContext
    {
        public CqmEhrReporting_productionEntities()
            : base("name=CqmEhrReporting_productionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<Sp_GetProviders_Result> Sp_GetProviders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetProviders_Result>("Sp_GetProviders");
        }
    
        public virtual int SP_Report_Creation(string description, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string bundleYear, string practiceLocation, string providerID, string measureList, Nullable<int> ranByUserID)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var bundleYearParameter = bundleYear != null ?
                new ObjectParameter("BundleYear", bundleYear) :
                new ObjectParameter("BundleYear", typeof(string));
    
            var practiceLocationParameter = practiceLocation != null ?
                new ObjectParameter("PracticeLocation", practiceLocation) :
                new ObjectParameter("PracticeLocation", typeof(string));
    
            var providerIDParameter = providerID != null ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(string));
    
            var measureListParameter = measureList != null ?
                new ObjectParameter("MeasureList", measureList) :
                new ObjectParameter("MeasureList", typeof(string));
    
            var ranByUserIDParameter = ranByUserID.HasValue ?
                new ObjectParameter("RanByUserID", ranByUserID) :
                new ObjectParameter("RanByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Report_Creation", descriptionParameter, startDateParameter, endDateParameter, bundleYearParameter, practiceLocationParameter, providerIDParameter, measureListParameter, ranByUserIDParameter);
        }
    }
}
